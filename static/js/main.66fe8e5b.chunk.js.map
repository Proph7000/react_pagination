{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","items","pageAmount","currentPage","onPageChange","className","classNames","disabled","href","onClick","event","map","page","isActive","active","item","itemsPageAmount","App","state","itemsPerPage","setItemsPerPage","amount","setState","setCurrentPage","target","dataset","cy","Number","textContent","getVisibleItems","itemsFromServer","numberPage","slice","this","Math","ceil","length","showItems","visibleItems","id","onChange","value","itemsAmount","htmlFor","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66fe8e5b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  items: string[],\n  pageAmount: number,\n  currentPage: number,\n  onPageChange: React.MouseEventHandler<HTMLAnchorElement>,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  pageAmount,\n  currentPage,\n  onPageChange,\n}) => {\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: currentPage === 1,\n            },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={(event) => onPageChange(event)}\n          >\n            «\n          </a>\n        </li>\n\n        {getNumbers(1, pageAmount).map(page => {\n          const isActive = page === currentPage;\n\n          return (\n            <li\n              className={classNames(\n                'page-item',\n                {\n                  active: isActive,\n                },\n              )}\n              key={page}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={(event) => {\n                  if (!isActive) {\n                    onPageChange(event);\n                  }\n                }}\n              >\n                { page }\n              </a>\n            </li>\n          );\n        })}\n\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: currentPage === pageAmount,\n            },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pageAmount}\n            onClick={(event) => onPageChange(event)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map((item: string) => (\n          <li data-cy=\"item\" key={item}>\n            { item }\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst maxItems = 42;\nconst itemsPageAmount = [3, 5, 10, 20];\nconst items = getNumbers(1, maxItems)\n  .map(n => `Item ${n}`);\n\ntype State = {\n  itemsPerPage: number,\n  currentPage: number,\n};\n\nexport class App extends Component {\n  state: Readonly<State> = {\n    itemsPerPage: 3,\n    currentPage: 1,\n  };\n\n  setItemsPerPage = (amount: number) => {\n    this.setState({\n      currentPage: 1,\n    });\n\n    this.setState({\n      itemsPerPage: amount,\n    });\n  };\n\n  setCurrentPage = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const page = event.target as HTMLAnchorElement;\n\n    if (page.dataset.cy === 'pageLink') {\n      this.setState({\n        currentPage: Number(page.textContent),\n      });\n    }\n\n    if (page.dataset.cy === 'prevLink') {\n      this.setState((state: State) => ({\n        currentPage: state.currentPage - 1,\n      }));\n    }\n\n    if (page.dataset.cy === 'nextLink') {\n      this.setState((state: State) => ({\n        currentPage: state.currentPage + 1,\n      }));\n    }\n  };\n\n  getVisibleItems = (\n    itemsFromServer: string[],\n    itemsPerPage: number,\n    numberPage: number,\n  ) => (\n    itemsFromServer\n      .slice(\n        itemsPerPage * numberPage - itemsPerPage,\n        itemsPerPage * numberPage,\n      )\n  );\n\n  render() {\n    const { currentPage, itemsPerPage } = this.state;\n\n    const pageAmount = Math.ceil(\n      items.length / itemsPerPage,\n    );\n\n    const showItems = ` ${currentPage * itemsPerPage - itemsPerPage + 1}`\n      + ` - ${(currentPage * itemsPerPage > maxItems) ? (maxItems) : (currentPage * itemsPerPage)} `;\n\n    const visibleItems = this.getVisibleItems(\n      items, itemsPerPage, this.state.currentPage,\n    );\n\n    return (\n      <div className=\"container\">\n        <h1>Items with Pagination</h1>\n\n        <p className=\"lead\" data-cy=\"info\">\n          Page 1 (items\n          { showItems }\n          of\n          {' '}\n          {maxItems}\n          )\n        </p>\n\n        <div className=\"form-group row\">\n          <div className=\"col-3 col-sm-2 col-xl-1\">\n            <select\n              data-cy=\"perPageSelector\"\n              id=\"perPageSelector\"\n              className=\"form-control\"\n              onChange={event => {\n                this.setItemsPerPage(+event.target.value);\n              }}\n            >\n              {itemsPageAmount.map(itemsAmount => (\n                <option value={itemsAmount} key={itemsAmount}>\n                  { itemsAmount }\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n            items per page\n          </label>\n        </div>\n\n        <Pagination\n          items={visibleItems}\n          pageAmount={pageAmount}\n          currentPage={currentPage}\n          onPageChange={this.setCurrentPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}